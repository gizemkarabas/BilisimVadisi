@page "/user/myreservations"
@using MeetinRoomRezervation.Models
@using MeetinRoomRezervation.Services.ReservationService
@using System.Security.Claims
@inject IReservationService ReservationService
@inject AuthenticationStateProvider AuthProvider

<PageHeader Style="background-color: unset" Title="Rezervasyonlarım"/>

<Tabs DefaultActiveKey="1">
    <TabPane Key="1" Tab="Rezervasyonlarım">
        @if (FutureReservations.Any())
        {
            <Row Gutter="1">
                @foreach (var reservation in FutureReservations)
                {
                    <AntDesign.Col Span="5">
                        <Card
                            Title="@($"{reservation.StartTime.ToLocalTime().ToString("HH:mm")} - {reservation.EndTime.ToLocalTime().ToString("HH:mm")}")"
                            Class="reservation-card"
                            Style= "margin-bottom: 16px;
                                    width: 300px;
                                    padding: 1px;
                                    border-radius: 6px;
                                    background-color: #f0f0f0;
                                    color: #333;
                                    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);">
                            <p>
                                <Icon Type="calendar"/>
                                Tarih: @reservation.StartTime.ToString("dd.MM.yyyy dddd")</p>
                            <p>
                                <Icon Type="home"/>
                                Şirket: @reservation.RoomName</p>
                            <p>
                                <Icon Type="user"/>
                                Yetkili: @reservation.UserEmail</p>
                            <p>
                                <Icon Type="phone"/>
                                Telefon: ""
                            </p>

                            <Button Danger Type="ButtonType.Primary" OnClick="() => CancelReservation(reservation.Id)"
                                    Style="margin-top:10px;justify-content: center;">
                                Rezervasyonu İptal Et
                            </Button>
                        </Card>
                    </AntDesign.Col>
                }
            </Row>
        }
        else
        {
            <Alert Message="Henüz bir rezervasyonunuz bulunmamaktadır." Type="AlertType.Info" ShowIcon="true"/>
        }
    </TabPane>

    <TabPane Key="2" Tab="Geçmiş Rezervasyonlarım">
        @if (PastReservations.Any())
        {
            <Row Gutter="1">
                @foreach (var reservation in PastReservations)
                {
                    <AntDesign.Col Span="5">
                        <Card Title="@($"{reservation.StartTime:HH:mm} - {reservation.EndTime:HH:mm}")"
                              Style= "margin-bottom: 16px;
                                    width: 300px;
                                    padding: 1px;
                                    border-radius: 6px;
                                    background-color: #f0f0f0;
                                    color: #333;
                                    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);">
                            <p>
                                <Icon Type="calendar"/>
                                Tarih: @reservation.StartTime.ToString("dd.MM.yyyy dddd")</p>
                            <p>
                                <Icon Type="home"/>
                                Şirket: @reservation.RoomName</p>
                            <p>
                                <Icon Type="user"/>
                                Yetkili: @reservation.UserEmail</p>
                            <p>
                                <Icon Type="phone"/>
                                Telefon:""
                            </p>
                        </Card>
                    </AntDesign.Col>
                }
            </Row>
        }
        else
        {
            <Alert Message="Geçmiş bir rezervasyonunuz bulunmamaktadır." Type="AlertType.Info" ShowIcon="true"/>
        }
    </TabPane>
</Tabs>

@code {
    private List<ReservationDto> FutureReservations = new();
    private List<ReservationDto> PastReservations = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var userId = authState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? "";
        var allReservations = await ReservationService.GetUserReservations(userId);
        var now = DateTime.Now;

        FutureReservations = allReservations.Where(r => r.EndTime > now).ToList();
        PastReservations = allReservations.Where(r => r.EndTime <= now).ToList();
    }

    private async Task CancelReservation(string reservationId)
    {
        await ReservationService.CancelReservationAsync(reservationId);
        await OnInitializedAsync(); 
    }

}
