@page "/user/room-status"
@using AntDesign
@using MeetinRoomRezervation.Models
@inject IReservationService ReservationService
@inject NavigationManager Navigation

<PageTitle>Toplantı Odaları</PageTitle>

<Card Class="custom">
    <Title Level="4">Toplantı Odaları</Title>
    <div class="filter-bar">
        <DatePicker @bind-Value="SelectedDate" />
    </div>
</Card>

<Row Gutter="16" Style="margin-top: 16px;">
    @if (Rooms.Count == 0)
    {
        <AntDesign.Col Span="24">
            <Alert Message="Bu tarihte gösterilecek oda bulunamadı." Type="@AlertType.Info" ShowIcon="true" />
        </AntDesign.Col>
    }
    else
    {
        @foreach (var room in Rooms)
        {
            <AntDesign.Col Span="6">
                <div @onclick="@(() => NavigateToReservation(room))">
                    <Card Hoverable Style="margin-bottom: 16px;">
                        <CardMeta Title="@room.Name" Description="@room.Location" />
                        <div style="margin-top: 16px;">
                            <p><Icon Type="user" /> Kapasite: @room.Capacity</p>
                            <p><Icon Type="calendar" /> Doluluk: @room.OccupancyRate.ToString("F0")%</p>
                            <Tag Color="@GetStatusColor(room.IsAvailable)">
                                @(room.IsAvailable ? "Müsait" : "Dolu")
                            </Tag>
                        </div>
                    </Card>
                </div>
            </AntDesign.Col>
        }
    }
</Row>

<div class="custom">
    <p>sssss</p>
</div>

@code {
    private List<MeetingRoomDto> Rooms = new();
    private DateTime _selectedDate = DateTime.Today;

    private DateTime SelectedDate
    {
        get => _selectedDate;
        set
        {
            _selectedDate = value;
            InvokeAsync(LoadRooms);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadRooms();
    }

    private async Task LoadRooms()
    {
        Rooms = await ReservationService.GetAllRoomsWithOccupancyAsync(SelectedDate);
    }

    private string GetStatusColor(bool available) => available ? "green" : "red";

    private void NavigateToReservation(MeetingRoomDto room)
    {
        if (!room.IsAvailable) return;

        var dateStr = SelectedDate.ToString("yyyy-MM-dd");
        Navigation.NavigateTo($"/user/reserve?roomId={room.Id}&date={dateStr}");
    }
}
