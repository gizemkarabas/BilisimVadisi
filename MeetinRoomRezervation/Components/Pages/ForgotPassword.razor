@page "/forgot-password"
@inject IPasswordResetService PasswordResetService
@inject NavigationManager Navigation

<div class="forgot-password-container" style="max-width: 400px; margin: 0 auto; padding: 24px;">
    <Card Title="Şifre Sıfırlama" Style="width: 100%;">
        @if (!string.IsNullOrEmpty(SuccessMessage))
        {
            <Alert Message="@SuccessMessage" Type="@AlertType.Success" ShowIcon="true" Style="margin-bottom: 16px;" />
        }

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <Alert Message="@ErrorMessage" Type="@AlertType.Error" ShowIcon="true" Style="margin-bottom: 16px;" />
        }

        @if (!isEmailSent)
        {
            <Form Model="@ForgotPasswordModel" OnFinish="HandleForgotPassword" Layout="@FormLayout.Vertical">
                <FormItem Label="E-posta Adresiniz">
                    <Input @bind-Value="@ForgotPasswordModel.Email" Placeholder="Kayıtlı e-posta adresinizi giriniz" />
                </FormItem>

                <FormItem>
                    <Button Type="@ButtonType.Primary" HtmlType="submit" Block Loading="@isLoading">
                        Şifre Sıfırlama Linki Gönder
                    </Button>
                </FormItem>

                <FormItem>
                    <Button Type="@ButtonType.Link" OnClick="@(() => Navigation.NavigateTo("/login"))" Block>
                        Giriş Sayfasına Dön
                    </Button>
                </FormItem>
            </Form>
        }
        else
        {
            <div style="text-align: center;">
                <Icon Type="mail" Style="font-size: 48px; color: #52c41a; margin-bottom: 16px;" />
                <p>E-posta adresinize şifre sıfırlama linki gönderildi.</p>
                <p>Lütfen e-posta kutunuzu kontrol ediniz.</p>
                <Button Type="@ButtonType.Primary" OnClick="@(() => Navigation.NavigateTo("/login"))">
                    Giriş Sayfasına Dön
                </Button>
            </div>
        }
    </Card>
</div>

@code {
    private ForgotPasswordInputModel ForgotPasswordModel = new();
    private string ErrorMessage = "";
    private string SuccessMessage = "";
    private bool isLoading = false;
    private bool isEmailSent = false;

    private async Task HandleForgotPassword()
    {
        if (string.IsNullOrWhiteSpace(ForgotPasswordModel.Email))
        {
            ErrorMessage = "E-posta adresi zorunludur.";
            return;
        }

        isLoading = true;
        ErrorMessage = "";
        SuccessMessage = "";

        try
        {
            var result = await PasswordResetService.SendPasswordResetEmailAsync(ForgotPasswordModel.Email);

            if (result)
            {
                isEmailSent = true;
                SuccessMessage = "Şifre sıfırlama linki e-posta adresinize gönderildi.";
            }
            else
            {
                ErrorMessage = "Bu e-posta adresi ile kayıtlı kullanıcı bulunamadı.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "Bir hata oluştu. Lütfen tekrar deneyiniz.";
            Console.Error.WriteLine($"Forgot password error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    public class ForgotPasswordInputModel
    {
        public string Email { get; set; }
    }
}
